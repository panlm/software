# Configuration file for dnsmasq.
#
# Format is one option per line, legal options are the same
# as the long options legal on the command line. See
# "/usr/sbin/dnsmasq --help" or "man 8 dnsmasq" for details.

# The following two options make you a better netizen, since they
# tell dnsmasq to filter out queries which the public DNS cannot
# answer, and which load the servers (especially the root servers)
# uneccessarily. If you have a dial-on-demand link they also stop
# these requests from bringing up the link uneccessarily.

# Never forward plain names (without a dot or domain part)
#domain-needed
# Never forward addresses in the non-routed address spaces.
#bogus-priv


# Uncomment this to filter useless windows-originated DNS requests
# which can trigger dial-on-demand links needlessly.
# Note that (amongst other things) this blocks all SRV requests,
# so don't use it if you use eg Kerberos, SIP, XMMP or Google-talk.
# This option only affects forwarding, SRV records originating for
# dnsmasq (via srv-host= lines) are not suppressed by it.
#filterwin2k

# Change this line if you want dns to get its upstream servers from
# somewhere other that /etc/resolv.conf
#resolv-file=/etc/dnsmasq.resolv.conf

# By  default,  dnsmasq  will  send queries to any of the upstream
# servers it knows about and tries to favour servers to are  known
# to  be  up.  Uncommenting this forces dnsmasq to try each query
# with  each  server  strictly  in  the  order  they   appear   in
# /etc/resolv.conf
#strict-order

# If you don't want dnsmasq to read /etc/resolv.conf or any other
# file, getting its servers from this file instead (see below), then
# uncomment this.
#no-resolv

# If you don't want dnsmasq to poll /etc/resolv.conf or other resolv
# files for changes and re-read them then uncomment this.
#no-poll

# Add other name servers here, with domain specs if they are for
# non-public domains.
#server=/localnet/192.168.0.1

# Example of routing PTR queries to nameservers: this will send all 
# address->name queries for 192.168.3/24 to nameserver 10.1.2.3
#server=/3.168.192.in-addr.arpa/10.1.2.3

# Add local-only domains here, queries in these domains are answered
# from /etc/hosts or DHCP only.
#local=/localnet/

# Add domains which you want to force to an IP address here.
# The example below send any host in doubleclick.net to a local
# webserver.
#address=/doubleclick.net/127.0.0.1

# --address (and --server) work with IPv6 addresses too.
#address=/www.thekelleys.org.uk/fe80::20d:60ff:fe36:f83

# You can control how dnsmasq talks to a server: this forces 
# queries to 10.1.2.3 to be routed via eth1
# --server=10.1.2.3@eth1

# and this sets the source (ie local) address used to talk to
# 10.1.2.3 to 192.168.1.1 port 55 (there must be a interface with that
# IP on the machine, obviously).
# --server=10.1.2.3@192.168.1.1#55

# If you want dnsmasq to change uid and gid to something other
# than the default, edit the following lines.
#user=
#group=

# If you want dnsmasq to listen for DHCP and DNS requests only on
# specified interfaces (and the loopback) give the name of the
# interface (eg eth0) here.
# Repeat the line for more than one interface.
#interface=
# Or you can specify which interface _not_ to listen on
#except-interface=
# Or which to listen on by address (remember to include 127.0.0.1 if
# you use this.)
#listen-address=
# If you want dnsmasq to provide only DNS service on an interface,
# configure it as shown above, and then use the following line to
# disable DHCP on it.
#no-dhcp-interface=

# On systems which support it, dnsmasq binds the wildcard address,
# even when it is listening on only some interfaces. It then discards
# requests that it shouldn't reply to. This has the advantage of
# working even when interfaces come and go and change address. If you
# want dnsmasq to really bind only the interfaces it is listening on,
# uncomment this option. About the only time you may need this is when
# running another nameserver on the same machine.
#bind-interfaces

# If you don't want dnsmasq to read /etc/hosts, uncomment the
# following line.
#no-hosts
# or if you want it to read another file, as well as /etc/hosts, use
# this.
#addn-hosts=/etc/banner_add_hosts

# Set this (and domain: see below) if you want to have a domain
# automatically added to simple names in a hosts-file.
#expand-hosts

# Set the domain for dnsmasq. this is optional, but if it is set, it
# does the following things.
# 1) Allows DHCP hosts to have fully qualified domain names, as long
#     as the domain part matches this setting.
# 2) Sets the "domain" DHCP option thereby potentially setting the
#    domain of all systems configured by DHCP
# 3) Provides the domain part for "expand-hosts"
#domain=yinji.com.cn

# Uncomment this to enable the integrated DHCP server, you need
# to supply the range of addresses available for lease and optionally
# a lease time. If you have more than one network, you will need to
# repeat this for each network on which you want to supply DHCP
# service.
dhcp-range=net254,172.29.255.201,172.29.255.240,255.255.254.0,6h
dhcp-range=net249,172.29.249.2,172.29.249.250,255.255.255.0,8h
dhcp-range=net248,172.29.248.3,172.29.248.250,255.255.255.0,8h

# This is an example of a DHCP range where the netmask is given. This
# is needed for networks we reach the dnsmasq DHCP server via a relay
# agent. If you don't know what a DHCP relay agent is, you probably
# don't need to worry about this.
#dhcp-range=192.168.0.50,192.168.0.150,255.255.255.0,12h

# This is an example of a DHCP range with a network-id, so that
# some DHCP options may be set only for this network.
#dhcp-range=red,192.168.0.50,192.168.0.150

# Supply parameters for specified hosts using DHCP. There are lots
# of valid alternatives, so we will give examples of each. Note that
# IP addresses DO NOT have to be in the range given above, they just
# need to be on the same network. The order of the parameters in these
# do not matter, it's permissble to give name,adddress and MAC in any order

# Always allocate the host with ethernet address 11:22:33:44:55:66
# The IP address 192.168.0.60
#dhcp-host=00:50:56:98:22:71,172.29.255.203

# Always set the name of the host with hardware address
# 11:22:33:44:55:66 to be "fred"
#dhcp-host=11:22:33:44:55:66,fred

# Always give the host with ethernet address 11:22:33:44:55:66
# the name fred and IP address 192.168.0.60 and lease time 45 minutes
#dhcp-host=11:22:33:44:55:66,fred,192.168.0.60,45m

# Give the machine which says its name is "bert" IP address
# 192.168.0.70 and an infinite lease
#dhcp-host=bert,192.168.0.70,infinite

# Always give the host with client identifier 01:02:02:04
# the IP address 192.168.0.60
#dhcp-host=id:01:02:02:04,192.168.0.60

# Always give the host with client identifier "marjorie"
# the IP address 192.168.0.60
dhcp-host=id:testvm-1,172.29.255.216
dhcp-host=id:testvm-2,172.29.255.217
dhcp-host=id:testvm-3,172.29.255.218
dhcp-host=id:testvm-4,172.29.255.219
dhcp-host=id:testvm-5,172.29.255.220
dhcp-host=id:testvm-6,172.29.255.221
dhcp-host=id:testvm-7,172.29.255.222
dhcp-host=id:testvm-8,172.29.255.223
dhcp-host=id:testvm-9,172.29.255.224
dhcp-host=id:testvm-10,172.29.255.225

dhcp-host=id:vm1,172.29.254.101
dhcp-host=id:vm2,172.29.249.2
dhcp-host=id:vm3,172.29.249.3
dhcp-host=id:vm4,172.29.249.4
dhcp-host=id:vm5,172.29.249.5
dhcp-host=id:vm6,172.29.249.6
dhcp-host=id:vm7,172.29.249.7
dhcp-host=id:vm8,172.29.249.8
dhcp-host=id:vm9,172.29.249.9
dhcp-host=id:vm10,172.29.249.10
dhcp-host=id:vm11,172.29.249.11
dhcp-host=id:vm12,172.29.249.12
dhcp-host=id:vm13,172.29.249.13
dhcp-host=id:vm14,172.29.249.14
dhcp-host=id:vm15,172.29.249.15
dhcp-host=id:vm16,172.29.249.16
dhcp-host=id:vm17,172.29.249.17
dhcp-host=id:vm18,172.29.249.18
dhcp-host=id:vm19,172.29.249.19
dhcp-host=id:vm20,172.29.249.20
dhcp-host=id:vm21,172.29.249.21
dhcp-host=id:vm22,172.29.249.22
dhcp-host=id:vm23,172.29.249.23
dhcp-host=id:vm24,172.29.249.24
dhcp-host=id:vm25,172.29.249.25
dhcp-host=id:vm26,172.29.249.26
dhcp-host=id:vm27,172.29.249.27
dhcp-host=id:vm28,172.29.249.28
dhcp-host=id:vm29,172.29.249.29
dhcp-host=id:vm30,172.29.249.30
dhcp-host=id:vm31,172.29.249.31
dhcp-host=id:vm32,172.29.249.32
dhcp-host=id:vm33,172.29.249.33
dhcp-host=id:vm34,172.29.249.34
dhcp-host=id:vm35,172.29.249.35
dhcp-host=id:vm36,172.29.249.36
dhcp-host=id:vm37,172.29.249.37
dhcp-host=id:vm38,172.29.249.38
dhcp-host=id:vm39,172.29.249.39
dhcp-host=id:vm40,172.29.249.40
dhcp-host=id:vm41,172.29.249.41
dhcp-host=id:vm42,172.29.249.42
dhcp-host=id:vm43,172.29.249.43
dhcp-host=id:vm44,172.29.249.44
dhcp-host=id:vm45,172.29.249.45
dhcp-host=id:vm46,172.29.249.46
dhcp-host=id:vm47,172.29.249.47
dhcp-host=id:vm48,172.29.249.48
dhcp-host=id:vm49,172.29.249.49
dhcp-host=id:vm50,172.29.249.50
dhcp-host=id:vm51,172.29.249.51
dhcp-host=id:vm52,172.29.249.52
dhcp-host=id:vm53,172.29.249.53
dhcp-host=id:vm54,172.29.249.54
dhcp-host=id:vm55,172.29.249.55
dhcp-host=id:vm56,172.29.249.56
dhcp-host=id:vm57,172.29.249.57
dhcp-host=id:vm58,172.29.249.58
dhcp-host=id:vm59,172.29.249.59
dhcp-host=id:vm60,172.29.249.60
dhcp-host=id:vm61,172.29.249.61
dhcp-host=id:vm62,172.29.249.62
dhcp-host=id:vm63,172.29.249.63
dhcp-host=id:vm64,172.29.249.64
dhcp-host=id:vm65,172.29.249.65
dhcp-host=id:vm66,172.29.249.66
dhcp-host=id:vm67,172.29.249.67
dhcp-host=id:vm68,172.29.249.68
dhcp-host=id:vm69,172.29.249.69
dhcp-host=id:vm70,172.29.249.70
dhcp-host=id:vm71,172.29.249.71
dhcp-host=id:vm72,172.29.249.72
dhcp-host=id:vm73,172.29.249.73
dhcp-host=id:vm74,172.29.249.74
dhcp-host=id:vm75,172.29.249.75
dhcp-host=id:vm76,172.29.249.76
dhcp-host=id:vm77,172.29.249.77
dhcp-host=id:vm78,172.29.249.78
dhcp-host=id:vm79,172.29.249.79
dhcp-host=id:vm80,172.29.249.80
dhcp-host=id:vm81,172.29.249.81
dhcp-host=id:vm82,172.29.249.82
dhcp-host=id:vm83,172.29.249.83
dhcp-host=id:vm84,172.29.249.84
dhcp-host=id:vm85,172.29.249.85
dhcp-host=id:vm86,172.29.249.86
dhcp-host=id:vm87,172.29.249.87
dhcp-host=id:vm88,172.29.249.88
dhcp-host=id:vm89,172.29.249.89
dhcp-host=id:vm90,172.29.249.90
dhcp-host=id:vm91,172.29.249.91
dhcp-host=id:vm92,172.29.249.92
dhcp-host=id:vm93,172.29.249.93
dhcp-host=id:vm94,172.29.249.94
dhcp-host=id:vm95,172.29.249.95
dhcp-host=id:vm96,172.29.249.96
dhcp-host=id:vm97,172.29.249.97
dhcp-host=id:vm98,172.29.249.98
dhcp-host=id:vm99,172.29.249.99
dhcp-host=id:vm100,172.29.249.100
dhcp-host=id:vm101,172.29.249.101
dhcp-host=id:vm102,172.29.249.102
dhcp-host=id:vm103,172.29.249.103
dhcp-host=id:vm104,172.29.249.104
dhcp-host=id:vm105,172.29.249.105
dhcp-host=id:vm106,172.29.249.106
dhcp-host=id:vm107,172.29.249.107
dhcp-host=id:vm108,172.29.249.108
dhcp-host=id:vm109,172.29.249.109
dhcp-host=id:vm110,172.29.249.110
dhcp-host=id:vm111,172.29.249.111
dhcp-host=id:vm112,172.29.249.112
dhcp-host=id:vm113,172.29.249.113
dhcp-host=id:vm114,172.29.249.114
dhcp-host=id:vm115,172.29.249.115
dhcp-host=id:vm116,172.29.249.116
dhcp-host=id:vm117,172.29.249.117
dhcp-host=id:vm118,172.29.249.118
dhcp-host=id:vm119,172.29.249.119
dhcp-host=id:vm120,172.29.249.120
dhcp-host=id:vm121,172.29.249.121
dhcp-host=id:vm122,172.29.249.122
dhcp-host=id:vm123,172.29.249.123
dhcp-host=id:vm124,172.29.249.124
dhcp-host=id:vm125,172.29.249.125
dhcp-host=id:vm126,172.29.249.126
dhcp-host=id:vm127,172.29.249.127
dhcp-host=id:vm128,172.29.249.128
dhcp-host=id:vm129,172.29.249.129
dhcp-host=id:vm130,172.29.249.130
dhcp-host=id:vm131,172.29.249.131
dhcp-host=id:vm132,172.29.249.132
dhcp-host=id:vm133,172.29.249.133
dhcp-host=id:vm134,172.29.249.134
dhcp-host=id:vm135,172.29.249.135
dhcp-host=id:vm136,172.29.249.136
dhcp-host=id:vm137,172.29.249.137
dhcp-host=id:vm138,172.29.249.138
dhcp-host=id:vm139,172.29.249.139
dhcp-host=id:vm140,172.29.249.140
dhcp-host=id:vm141,172.29.249.141
dhcp-host=id:vm142,172.29.249.142
dhcp-host=id:vm143,172.29.249.143
dhcp-host=id:vm144,172.29.249.144
dhcp-host=id:vm145,172.29.249.145
dhcp-host=id:vm146,172.29.249.146
dhcp-host=id:vm147,172.29.249.147
dhcp-host=id:vm148,172.29.249.148
dhcp-host=id:vm149,172.29.249.149
dhcp-host=id:vm150,172.29.249.150
dhcp-host=id:vm151,172.29.249.151
dhcp-host=id:vm152,172.29.249.152
dhcp-host=id:vm153,172.29.249.153
dhcp-host=id:vm154,172.29.249.154
dhcp-host=id:vm155,172.29.249.155
dhcp-host=id:vm156,172.29.249.156
dhcp-host=id:vm157,172.29.249.157
dhcp-host=id:vm158,172.29.249.158
dhcp-host=id:vm159,172.29.249.159
dhcp-host=id:vm160,172.29.249.160
dhcp-host=id:vm161,172.29.249.161
dhcp-host=id:vm162,172.29.249.162
dhcp-host=id:vm163,172.29.249.163
dhcp-host=id:vm164,172.29.249.164
dhcp-host=id:vm165,172.29.249.165
dhcp-host=id:vm166,172.29.249.166
dhcp-host=id:vm167,172.29.249.167
dhcp-host=id:vm168,172.29.249.168
dhcp-host=id:vm169,172.29.249.169
dhcp-host=id:vm170,172.29.249.170
dhcp-host=id:vm171,172.29.249.171
dhcp-host=id:vm172,172.29.249.172
dhcp-host=id:vm173,172.29.249.173
dhcp-host=id:vm174,172.29.249.174
dhcp-host=id:vm175,172.29.249.175
dhcp-host=id:vm176,172.29.249.176
dhcp-host=id:vm177,172.29.249.177
dhcp-host=id:vm178,172.29.249.178
dhcp-host=id:vm179,172.29.249.179
dhcp-host=id:vm180,172.29.249.180
dhcp-host=id:vm181,172.29.249.181
dhcp-host=id:vm182,172.29.249.182
dhcp-host=id:vm183,172.29.249.183
dhcp-host=id:vm184,172.29.249.184
dhcp-host=id:vm185,172.29.249.185
dhcp-host=id:vm186,172.29.249.186
dhcp-host=id:vm187,172.29.249.187
dhcp-host=id:vm188,172.29.249.188
dhcp-host=id:vm189,172.29.249.189
dhcp-host=id:vm190,172.29.249.190
dhcp-host=id:vm191,172.29.249.191
dhcp-host=id:vm192,172.29.249.192
dhcp-host=id:vm193,172.29.249.193
dhcp-host=id:vm194,172.29.249.194
dhcp-host=id:vm195,172.29.249.195
dhcp-host=id:vm196,172.29.249.196
dhcp-host=id:vm197,172.29.249.197
dhcp-host=id:vm198,172.29.249.198
dhcp-host=id:vm199,172.29.249.199
dhcp-host=id:vm200,172.29.249.200


# Enable the address given for "judge" in /etc/hosts
# to be given to a machine presenting the name "judge" when
# it asks for a DHCP lease.
#dhcp-host=testvm-2

# Never offer DHCP service to a machine whose ethernet
# address is 11:22:33:44:55:66
#dhcp-host=11:22:33:44:55:66,ignore

# Ignore any client-id presented by the machine with ethernet
# address 11:22:33:44:55:66. This is useful to prevent a machine
# being treated differently when running under different OS's or
# between PXE boot and OS boot.
#dhcp-host=11:22:33:44:55:66,id:*

# Send extra options which are tagged as "red" to
# the machine with ethernet address 11:22:33:44:55:66
#dhcp-host=11:22:33:44:55:66,net:red

# Send extra options which are tagged as "red" to
# any machine with ethernet address starting 11:22:33:
#dhcp-host=11:22:33:*:*:*,net:red

# Ignore any clients which are specified in dhcp-host lines
# or /etc/ethers. Equivalent to ISC "deny unkown-clients".
# This relies on the special "known" tag which is set when 
# a host is matched.
#dhcp-ignore=#known

# Send extra options which are tagged as "red" to any machine whose
# DHCP vendorclass string includes the substring "Linux"
#dhcp-vendorclass=red,Linux

# Send extra options which are tagged as "red" to any machine one
# of whose DHCP userclass strings includes the substring "accounts"
#dhcp-userclass=red,accounts

# Send extra options which are tagged as "red" to any machine whose
# MAC address matches the pattern.
#dhcp-mac=red,00:60:8C:*:*:*

# If this line is uncommented, dnsmasq will read /etc/ethers and act
# on the ethernet-address/IP pairs found there just as if they had
# been given as --dhcp-host options. Useful if you keep
# MAC-address/host mappings there for other purposes.
#read-ethers

# Send options to hosts which ask for a DHCP lease.
# See RFC 2132 for details of available options.
# Common options can be given to dnsmasq by name: 
# run "dnsmasq --help dhcp" to get a list.
# Note that all the common settings, such as netmask and
# broadcast address, DNS server and default route, are given
# sane defaults by dnsmasq. You very likely will not need 
# any dhcp-options. If you use Windows clients and Samba, there
# are some options which are recommended, they are detailed at the
# end of this section.

# Override the default route supplied by dnsmasq, which assumes the
# router is the same machine as the one running dnsmasq.
#dhcp-option=3,1.2.3.4

#router
dhcp-option=net248,3,172.29.248.1
dhcp-option=net249,3,172.29.249.1
dhcp-option=net254,3,172.29.254.1

#dns
dhcp-option=net248,6,172.29.255.96
dhcp-option=net249,6,172.29.254.100
dhcp-option=net254,6,172.29.254.100

# Do the same thing, but using the option name
#dhcp-option=option:router,172.29.254.1
#dhcp-option=option:dns-server,172.29.255.96
#dhcp-option=option:dns-server,172.30.254.100

# Override the default route supplied by dnsmasq and send no default
# route at all. Note that this only works for the options sent by
# default (1, 3, 6, 12, 28) the same line will send a zero-length option 
# for all other option numbers.
#dhcp-option=3

# Set the NTP time server addresses to 192.168.0.4 and 10.10.0.5
#dhcp-option=option:ntp-server,192.168.0.4,10.10.0.5

# Set the NTP time server address to be the same machine as
# is running dnsmasq
#dhcp-option=42,0.0.0.0

# Set the NIS domain name to "welly"
#dhcp-option=40,welly

# Set the default time-to-live to 50
#dhcp-option=23,50

# Set the "all subnets are local" flag
#dhcp-option=27,1

# Send the etherboot magic flag and then etherboot options (a string).
#dhcp-option=128,e4:45:74:68:00:00
#dhcp-option=129,NIC=eepro100

# Specify an option which will only be sent to the "red" network
# (see dhcp-range for the declaration of the "red" network)
# Note that the net: part must precede the option: part.
#dhcp-option = net:red, option:ntp-server, 192.168.1.1

# The following DHCP options set up dnsmasq in the same way as is specified
# for the ISC dhcpcd in
# http://www.samba.org/samba/ftp/docs/textdocs/DHCP-Server-Configuration.txt
# adapted for a typical dnsmasq installation where the host running
# dnsmasq is also the host running samba.
# you may want to uncomment them if you use Windows clients and Samba.
#dhcp-option=19,0           # option ip-forwarding off
#dhcp-option=44,0.0.0.0     # set netbios-over-TCP/IP nameserver(s) aka WINS server(s)
#dhcp-option=45,0.0.0.0     # netbios datagram distribution server
#dhcp-option=46,8           # netbios node type
#dhcp-option=47             # empty netbios scope.

# Send RFC-3397 DNS domain search DHCP option. WARNING: Your DHCP client
# probably doesn't support this......
#dhcp-option=option:domain-search,eng.apple.com,marketing.apple.com

# Send RFC-3442 classless static routes (note the netmask encoding)
#dhcp-option=121,192.168.1.0/24,1.2.3.4,10.0.0.0/8,5.6.7.8

# Send vendor-class specific options encapsulated in DHCP option 43. 
# The meaning of the options is defined by the vendor-class so
# options are sent only when the client supplied vendor class
# matches the class given here. (A substring match is OK, so "MSFT" 
# matches "MSFT" and "MSFT 5.0"). This example sets the
# mtftp address to 0.0.0.0 for PXEClients.
#dhcp-option=vendor:PXEClient,1,0.0.0.0

# Send microsoft-specific option to tell windows to release the DHCP lease
# when it shuts down. Note the "i" flag, to tell dnsmasq to send the
# value as a four-byte integer - that's what microsoft wants. See
# http://technet2.microsoft.com/WindowsServer/en/library/a70f1bb7-d2d4-49f0-96d6-4b7414ecfaae1033.mspx?mfr=true
#dhcp-option=vendor:MSFT,2,1i

# Send the Encapsulated-vendor-class ID needed by some configurations of
# Etherboot to allow is to recognise the DHCP server.
#dhcp-option=vendor:Etherboot,60,"Etherboot"

# Send options to PXELinux. Note that we need to send the options even
# though they don't appear in the parameter request list, so we need
# to use dhcp-option-force here. 
# See http://syslinux.zytor.com/pxe.php#special for details.
# Magic number - needed before anything else is recognised
#dhcp-option-force=208,f1:00:74:7e
# Configuration file name
#dhcp-option-force=209,configs/common
# Path prefix
#dhcp-option-force=210,/tftpboot/pxelinux/files/
# Reboot time. (Note 'i' to send 32-bit value)
#dhcp-option-force=211,30i

# Set the boot filename for BOOTP. You will only need 
# this is you want to boot machines over the network and you will need
# a TFTP server; either dnsmasq's built in TFTP server or an
# external one. (See below for how to enable the TFTP server.)
#dhcp-boot=pxelinux.0

# Boot for Etherboot gPXE. The idea is to send two different
# filenames, the first loads gPXE, and the second tells gPXE what to
# load. The dhcp-match sets the gpxe tag for requests from gPXE.
#dhcp-match=gpxe,175 # gPXE sends a 175 option.
#dhcp-boot=net:#gpxe,undionly.kpxe
#dhcp-boot=mybootimage
 
# Enable dnsmasq's built-in TFTP server
#enable-tftp

# Set the root directory for files availble via FTP.
#tftp-root=/var/ftpd

# Make the TFTP server more secure: with this set, only files owned by
# the user dnsmasq is running as will be send over the net.
#tftp-secure

# Set the boot file name only when the "red" tag is set.
#dhcp-boot=net:red,pxelinux.red-net

# An example of dhcp-boot with an external server: the name and IP
# address of the server are given after the filename.
#dhcp-boot=/var/ftpd/pxelinux.0,boothost,192.168.0.3

# Set the limit on DHCP leases, the default is 150
#dhcp-lease-max=150

# The DHCP server needs somewhere on disk to keep its lease database.
# This defaults to a sane location, but if you want to change it, use
# the line below.
#dhcp-leasefile=/var/lib/misc/dnsmasq.leases

# Set the DHCP server to authoritative mode. In this mode it will barge in
# and take over the lease for any client which broadcasts on the network,
# whether it has a record of the lease or not. This avoids long timeouts
# when a machine wakes up on a new network. DO NOT enable this if there's
# the slighest chance that you might end up accidentally configuring a DHCP
# server for your campus/company accidentally. The ISC server uses
# the same option, and this URL provides more information:
# http://www.isc.org/index.pl?/sw/dhcp/authoritative.php
#dhcp-authoritative

# Run an executable when a DHCP lease is created or destroyed.
# The arguments sent to the script are "add" or "del", 
# then the MAC address, the IP address and finally the hostname
# if there is one. 
#dhcp-script=/bin/echo

# Set the cachesize here.
#cache-size=150

# If you want to disable negative caching, uncomment this.
#no-negcache

# Normally responses which come form /etc/hosts and the DHCP lease
# file have Time-To-Live set as zero, which conventionally means
# do not cache further. If you are happy to trade lower load on the
# server for potentially stale date, you can set a time-to-live (in
# seconds) here.
#local-ttl=

# If you want dnsmasq to detect attempts by Verisign to send queries
# to unregistered .com and .net hosts to its sitefinder service and
# have dnsmasq instead return the correct NXDOMAIN response, uncomment
# this line. You can add similar lines to do the same for other
# registries which have implemented wildcard A records.
#bogus-nxdomain=64.94.110.11

# If you want to fix up DNS results from upstream servers, use the
# alias option. This only works for IPv4.
# This alias makes a result of 1.2.3.4 appear as 5.6.7.8
#alias=1.2.3.4,5.6.7.8
# and this maps 1.2.3.x to 5.6.7.x
#alias=1.2.3.0,5.6.7.0,255.255.255.0


# Change these lines if you want dnsmasq to serve MX records.

# Return an MX record named "maildomain.com" with target
# servermachine.com and preference 50
#mx-host=maildomain.com,servermachine.com,50

# Set the default target for MX records created using the localmx option.
#mx-target=servermachine.com

# Return an MX record pointing to the mx-target for all local
# machines.
#localmx

# Return an MX record pointing to itself for all local machines.
#selfmx

# Change the following lines if you want dnsmasq to serve SRV
# records.  These are useful if you want to serve ldap requests for
# Active Directory and other windows-originated DNS requests.
# See RFC 2782.
# You may add multiple srv-host lines.
# The fields are <name>,<target>,<port>,<priority>,<weight>
# If the domain part if missing from the name (so that is just has the
# service and protocol sections) then the domain given by the domain=
# config option is used. (Note that expand-hosts does not need to be
# set for this to work.)

# A SRV record sending LDAP for the example.com domain to
# ldapserver.example.com port 289
#srv-host=_ldap._tcp.example.com,ldapserver.example.com,389

# A SRV record sending LDAP for the example.com domain to
# ldapserver.example.com port 289 (using domain=)
#domain=example.com
#srv-host=_ldap._tcp,ldapserver.example.com,389

# Two SRV records for LDAP, each with different priorities
#srv-host=_ldap._tcp.example.com,ldapserver.example.com,389,1
#srv-host=_ldap._tcp.example.com,ldapserver.example.com,389,2

# A SRV record indicating that there is no LDAP server for the domain
# example.com
#srv-host=_ldap._tcp.example.com

# The following line shows how to make dnsmasq serve an arbitrary PTR
# record. This is useful for DNS-SD. (Note that the
# domain-name expansion done for SRV records _does_not
# occur for PTR records.)
#ptr-record=_http._tcp.dns-sd-services,"New Employee Page._http._tcp.dns-sd-services"

# Change the following lines to enable dnsmasq to serve TXT records.
# These are used for things like SPF and zeroconf. (Note that the
# domain-name expansion done for SRV records _does_not
# occur for TXT records.)

#Example SPF.
#txt-record=example.com,"v=spf1 a -all"

#Example zeroconf
#txt-record=_http._tcp.example.com,name=value,paper=A4


# For debugging purposes, log each DNS query as it passes through
# dnsmasq.
#log-queries

# Log lots of extra information about DHCP transactions.
#log-dhcp

# Include a another lot of configuration options.
#conf-file=/etc/dnsmasq.more.conf
conf-dir=/etc/dnsmasq.d
