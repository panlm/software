#!/bin/bash

# With argument -a, this sets a random password and sets it up to be
# displayed on the login screen
# With a argument -u, the user is prompted for the password and the password
# which is set is not displayed on the screen.

LOGIN_MSG=/opt/aurora/etc/login_msg

if [ "$1" == "-u" ]; then
   # User set password
   read -p "New password: " -s p1 && echo && \
   read -p "Retype password: " -s p2 && echo
   if [ $? != 0 ]; then
      echo Not changing password
      exit 1
   fi
   if [ "$p1" != "$p2" ]; then
      echo Passwords do not match
      exit 1
   fi
   passwd="$p1"
   display_passwd="Password set by user"
   notification=""
elif [ "$1" == "-a" ]; then
   # Auto generated password
   passwd=`openssl rand -base64 12`
   if [ $? != 0 ]; then
      echo "Error generating random password"
      exit 1
   fi
   display_passwd="$passwd"
   notification="Please change password after first time login using script /opt/aurora/sbin/set_password -u"
else
   echo "Usage:" "$0" '[ -a | -u ]'
   echo "   -a, set password using auto generated password"
   echo "   -u, user reset password"
   exit 1
fi

cryptpasswd=`echo $passwd | /opt/aurora/sbin/password_crypt` && \
rm -f $LOGIN_MSG && \

echo Login password -- "$display_passwd" >$LOGIN_MSG && \
echo $notification >> $LOGIN_MSG && \
chmod 600 $LOGIN_MSG && \
usermod -p "$cryptpasswd" root && \
if id aurora >/dev/null 2>&1; then usermod -p "$cryptpasswd" aurora; fi
if id agent >/dev/null 2>&1; then usermod -p "$cryptpasswd" agent; fi
